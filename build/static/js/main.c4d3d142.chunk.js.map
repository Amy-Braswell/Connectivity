{"version":3,"sources":["context/auth.js","util/ProtectedRoute.js","Components/Dropdown/Dropdown.js","Components/MenuBar/MenuBar.js","Components/Header/Header.js","Components/Tooltip/Tooltip.js","Components/NavBar/NavBar.js","Components/CommentButton/CommentButton.js","graphql.js/mutations.js","graphql.js/queries.js","Components/DeleteButton/DeleteButton.js","Components/LikeButton/LikeButton.js","Components/PostCard/PostCard.js","util/Form.js","util/hooks.js","Components/PostForm/PostForm.js","Pages/Home/Home.js","Pages/Login/Login.js","Components/MemberCard/MemberCard.js","Pages/Members/Members.js","Pages/SinglePost/SinglePost.js","Pages/SingleMember/SingleMember.js","Pages/UpdateProfile/UpdateProfile.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","AuthContext","createContext","photos","isAuth","login","userData","logout","updateUser","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","ContextReducer","state","_ref","type","payload","Object","objectSpread2","newPicture","AuthProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","assign","value","setItem","token","tokenId","ProtectedRoute","Component","component","rest","objectWithoutProperties","useContext","react_router","render","to","Dropdown","title","_ref$items","items","_useState","multiSelect","useState","_useState2","open","setOpen","toggle","handleClickOutside","className","tabIndex","role","onKeyPress","onClick","react_fontawesome_index_es","icon","map","item","key","id","clickOutsideConfig","onClickOutside","MenuBar","_useContext","react_router_dom","name","Header","loggedInItems","MenuBar_MenuBar","Components_Dropdown_Dropdown","Tooltip","style","color","children","top","left","message","NavBar","Tooltip_Tooltip","CommentButton","_ref$post","post","commentCount","commentButton","concat","LOGIN_USER","gql","_templateObject","UPDATE_USER","_templateObject2","_templateObject3","CREATE_POST_MUTATION","_templateObject4","DELETE_POST_MUTATION","_templateObject5","LIKE_POST_MUTATION","_templateObject6","SUBMIT_COMMENT_MUTATION","_templateObject7","DELETE_COMMENT_MUTATION","_templateObject8","FETCH_POSTS_QUERY","queries_templateObject","FETCH_POST_QUERY","queries_templateObject2","FETCH_USERS_QUERY","queries_templateObject3","FETCH_USER_QUERY","queries_templateObject4","queries_templateObject5","queries_templateObject6","DeleteButton","postId","commentId","callback","mutation","_useMutation","useMutation","update","proxy","data","readQuery","query","getPosts","filter","p","writeQuery","variables","deletePostOrMutation","confirmAlert","buttons","label","LikeButton","likeCount","likes","liked","setLiked","useEffect","find","like","likePost","likeButton","PostCard","body","createdAt","picture","formattedTime","moment","fromNow","src","alt","LikeButton_LikeButton","CommentButton_CommentButton","DeleteButton_DeleteButton","Form","otherProps","join","action","useForm","arguments","length","undefined","values","setValues","onChange","event","defineProperty","target","onSubmit","preventDefault","PostForm","_useForm","createPost","result","toConsumableArray","_useMutation2","loading","htmlFor","placeholder","Home","_useQuery","useQuery","posts","PostForm_PostForm","PostCard_PostCard","Login","context","errors","setErrors","loginUser","email","password","_","history","push","onError","err","graphQLErrors","extensions","exception","keys","error","MemberCard","_ref$user","city","relation","Members","users","getUsers","MemberCard_MemberCard","SinglePost","postMarkup","match","params","commentInputRef","useRef","comment","setComment","getPost","current","blur","submitComment","comments","replace","ref","disabled","trim","SingleMember","userMarkup","userId","memberId","getUser","phone","about","banner","infoTab","Fragment","phoneNumberString","formatPhoneNumber","postsTab","filteredPosts","slice","getPostsFromMember","displayTabs","esm","defaultIndex","onSelect","index","UpdateProfile","_useState3","_useState4","currentData","noValidate","library","add","faAddressCard","faBars","faCamera","faComment","faEdit","faEnvelope","faPencilAlt","faPhone","faThumbsUp","faTimes","faTrashAlt","faUsers","App","NavBar_NavBar","Header_Header","util_ProtectedRoute","exact","path","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","react_common_esm","src_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c4d3d142.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\n\nconst initialState = {\n  user: null\n};\n\nconst AuthContext = createContext({\n  user: null,\n  photos: [],\n  isAuth: false,\n  login: (userData) => {},\n  logout: () => {},\n  updateUser: (userData) => {}\n});\n\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  }   \n  else {\n    initialState.user = decodedToken;\n    }\n  } \n\n\n\nfunction ContextReducer(state, { type, payload}) {\n  switch (type) {\n    case \"CREATE_PHOTO\":\n      // console.log('CREATE_PHOTO_CASE has run... payload is: ', payload)\n      // console.log('updated state is: ', state)\n      return {\n        ...state,\n        newPicture: payload\n      };\n    case 'LOGIN':\n      return {\n        ...state,\n        user: payload \n      }\n      ;\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\n\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(ContextReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token || userData.tokenId)\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n\n  return (\n    <AuthContext.Provider\n    value={{ user: state.user, photos: state.photos, isAuth: state.isAuth, login, logout, dispatch }}\n    {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider, ContextReducer }","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport onClickOutside from 'react-onclickoutside'\nimport './Dropdown.css'\n\n\n\nfunction Dropdown({ title, items = [], multiSelect = false }) {\n    const [open, setOpen] = useState(false)\n    const toggle = () => setOpen(!open)\n    Dropdown.handleClickOutside = () => setOpen(false)\n\n    return (\n        <div className=\"dd-wrapper\">\n            <div \n                tabIndex={0} \n                className=\"dd-header\" \n                role=\"button\"\n                onKeyPress={() => toggle(!open)} \n                onClick={() => toggle(!open)}  \n            >  \n                <div className='dd-header__title'>\n                    <p className='dd-header__title--bold'>{title}</p>\n                </div>\n                <div className='dd-header__action'>\n                    <p>{open ? <FontAwesomeIcon className='bars' icon={['fas', 'times']} /> : <FontAwesomeIcon className='times' icon={['fas', 'bars']} /> }</p>\n                </div>\n            </div>\n            {open && (\n                <ul className='dd__list'>\n                    {items.map(item => (\n                        <li className='dd__list-item' key={item.id}>\n                            <button className='dd__li__button' type='button' onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)}>  \n                                {item.value}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: () => Dropdown.handleClickOutside\n}\n\nexport default onClickOutside(Dropdown, clickOutsideConfig)\n\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {AuthContext} from '../../context/auth'\nimport './MenuBar.css'\n\n\n\nexport default function MenuBar() {\n  const { user, logout } = useContext(AuthContext)\n\n  const menuBar = user ? (\n    <nav>\n      <div className='menubar__flex-container'>\n        <div className='menubar__flex-item'>\n          <Link to={'/'}>\n          { user && (user.name)}\n          </Link>\n        </div>\n        <div className='menubar__flex-item'>\n          <Link to={'/login'} onClick={logout}>\n            Logout\n          </Link>\n        </div>\n      </div>\n    </nav>\n  ) : (\n    // <nav>\n    //   <div className='menubar__flex-container'>\n    //     <div className='menubar__flex-item'>\n    //       <Link to={'/register'}>\n    //         Register\n    //       </Link>\n    //     </div>\n    //   </div>\n    // </nav>\n\n    <nav>\n    <div className='menubar__flex-container'>\n      <div className='menubar__flex-item'>    \n      </div>\n    </div>\n  </nav>\n  );\n\n  return menuBar;\n}","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {AuthContext} from '../../context/auth'\nimport Dropdown from '../Dropdown/Dropdown'\nimport MenuBar from '../MenuBar/MenuBar'\n\nimport './Header.css'\n\n\n\nexport default function Header() {\n    const { user, logout } = useContext(AuthContext)\n\n    const loggedInItems = [\n        // {\n        //     id: 1,\n        //     value: <Link to={'/about'}><span className='dd__li--width'>About</span></Link>\n        // },\n        // {\n        //     id: 2,\n        //     value: <Link to={'/login'} onClick={logout}><span className='dd__li--width'>Logout</span></Link>\n        // }\n        {\n            id: 1,\n            value: <Link to={'/login'} onClick={logout}><span className='dd__li--width'>Logout</span></Link>\n        }\n      ]\n    \n      const loggedOutItems = [\n        // {\n        //     id: 1,\n        //     value: <Link to={'/register'}><span className='dd__li--width'>Register</span></Link>\n        // }\n        {\n            id: 2,\n            value: ''\n        }\n      ]\n\n    return(\n        <header>\n            <div className='Desktop__header'>\n                <div className='app__header__logo__container'>\n                    <h1>\n                        <Link to='/'>Connectivity</Link>{' '}\n                    </h1>\n                </div>\n\n                <div className='menubar__container'>\n                    <MenuBar />\n                </div>  \n            </div>\n\n            <div className='Mobile__header'>\n                <div className='app__header__logo__container'>\n                    <h1>\n                        <Link to='/'>Connectivity</Link>{' '}\n                    </h1>\n                </div>\n                <div className=\"dropdown__container\">\n                    {user ?\n                        <Dropdown items={loggedInItems}/> \n                        :\n                        // <Dropdown items={loggedOutItems}/> \n                        <div></div>\n                    }\n                </div>\n            </div>\n\n        </header>\n    )\n}","import React from 'react'\nimport './Tooltip.css'\n\nexport default function Tooltip(props) {\n    return(\n        <span className='Tooltip'>\n            <span \n                className ='Tooltip-content'\n                style={{ color: props.color }}\n            >\n                {props.children}\n            </span>\n            <div className='Tooltip-message'\n                 style={{ top: props.top, left: props.left}}      \n            >\n                {props.message}\n            </div>\n        </span>\n    )\n}","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {AuthContext} from '../../context/auth'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './NavBar.css'\n\n\n\nexport default function NavBar() {\n  const { user } = useContext(AuthContext)\n\n  const navBar = !user ? (\n    <div>{''}</div>\n  ) : (\n    <nav className='nav'>\n      <div className='nav__flex-container nav__bar'>\n        <div className='nav__item'>\n          <Tooltip message='Posts'>\n            <Link to={'/'} name=\"posts\">\n              <FontAwesomeIcon icon={['fa', 'address-card']} />\n            </Link>\n          </Tooltip>\n        </div>\n        <div className='nav__item'>\n          <Tooltip message='Members'>\n            <Link to={'/members'} name=\"members\">\n              <FontAwesomeIcon icon={['fa', 'users']} />\n            </Link>\n          </Tooltip>\n        </div>\n        <div className='nav__item'>\n          <Tooltip message='Edit Profile'>\n            <Link to={'/update'} name=\"update\">\n              <FontAwesomeIcon icon={['fa', 'pencil-alt']} />\n            </Link>\n          </Tooltip>\n        </div>\n      </div>\n    </nav>\n  )\n\n  return navBar\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '../Tooltip/Tooltip'\n\nimport './CommentButton.css'\n\n\n\nexport default function CommentButton({ post: {id, commentCount}}) {\n    \n    const moreThanZero = commentCount !== 0 ? true : false\n\n    const commentButton = \n\n    ( moreThanZero ?\n        (\n        <button\n        className='Button--comment'\n        type='button'\n        >\n        <span> <FontAwesomeIcon icon={['fas', 'comment']} />{' '}</span>\n        <span>{' '}{commentCount}</span>\n        </button>\n        )\n\n        :\n\n        (\n        <button\n            className='Button--comment'\n            type='button'\n        >\n            <span><FontAwesomeIcon icon={['fas', 'comment']} />{' '}</span>\n        </button>\n        ) \n    )\n\n    return (\n        <div className='comment__button'>\n              <Tooltip message=\"Comment\">\n                <Link to={`/posts/${id}`}> \n                    {commentButton}\n                </Link>\n              </Tooltip> \n        </div>\n    )\n\n}","import gql from 'graphql-tag';\n\n\n\nexport const LOGIN_USER = gql`\nmutation login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    id\n    email\n    name\n    about\n    city\n    state\n    picture\n    banner\n    phone\n    relation\n    createdAt\n    token\n  }\n}\n`\n\nexport const REGISTER_USER = gql`\nmutation register(\n  $name: String!\n  $email: String!\n  $password: String!\n  $confirmPassword: String!\n) {\n  register(\n    registerInput: {\n      name: $name\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n    }\n  ) {\n    id\n    email\n    name\n    createdAt\n    token\n  }\n}\n`;\n\nexport const UPDATE_USER = gql`\nmutation updateProfile(\n  $email: String!\n  $phone: String\n  $city: String\n  $state: String\n  $about: String\n  $relation: String\n  $picture: String\n  $banner: String\n) {\n  updateProfile(\n    updateInput: {\n      email: $email\n      phone: $phone\n      city: $city\n      state: $state\n      about: $about\n      relation: $relation\n      picture: $picture\n      banner: $banner\n    }\n  ) {\n    email\n    phone\n    city\n    state\n    about\n    relation\n    picture\n    banner \n  }\n}\n`;\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likes {\n        id\n        name\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        picture\n        name\n        createdAt\n      }\n      commentCount\n    }\n  }\n`\n\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`\n\nexport const LIKE_POST_MUTATION = gql`\nmutation likePost($postId: ID!) {\n  likePost(postId: $postId) {\n    id\n    likes {\n      id\n      name\n    }\n    likeCount\n  }\n}\n`\n\nexport const SUBMIT_COMMENT_MUTATION = gql`\n  mutation createComment($postId: ID!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        picture\n        createdAt\n        name\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        name\n        createdAt\n        picture\n        body\n      }\n      commentCount\n    }\n  }\n`\n\nexport const CREATE_PHOTO_MUTATION = `\nmutation($picture: String!) {\n  createPhoto(\n    picture: $picture,\n  ) {\n    picture\n  }\n}\n`\n\nexport const CREATE_BANNER_MUTATION = `\nmutation($banner: String!) {\n  createBanner(\n    banner: $banner,\n  ) {\n    banner\n  }\n}\n`\n\n\n\n\n\n","import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n  {\n    getPosts {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likeCount\n      likes {\n        name\n      }\n      commentCount\n      comments {\n        id\n        name\n        picture\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likeCount\n      likes {\n        name\n      }\n      commentCount\n      comments {\n        id\n        name\n        picture\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const FETCH_USERS_QUERY = gql`\n  {\n    getUsers {\n    id\n    name\n    phone\n    about\n    city\n    state\n    relation\n    email\n    picture\n    banner\n    token\n    createdAt\n    }\n  }\n`;\n\nexport const FETCH_USER_QUERY = gql`\n  query($userId: ID!) {\n    getUser(userId: $userId) {\n    id\n    name\n    phone\n    about\n    city\n    state\n    relation\n    banner\n    email\n    picture\n    createdAt\n    }\n  }\n`;\n\nexport const FETCH_PHOTOS_QUERY = gql`\n  {\n    getPhotos {\n      id\n      image\n      createdAt\n      folder{\n        name\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const FETCH_PHOTO_QUERY = gql`\n  query($photoId: ID!) {\n    getPhoto(photoId: $photoId) {\n      id\n      image\n      createdAt\n      folder{\n        name\n        createdAt\n      }\n    }\n  }\n`;\n\n\n\n","import React from 'react'\nimport {confirmAlert} from 'react-confirm-alert'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { DELETE_COMMENT_MUTATION, DELETE_POST_MUTATION } from '../../graphql.js/mutations'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './DeleteButton.css'\n\n\n\nexport default function DeleteButton({ postId, commentId, callback }) {\n\n  const confirmDelete = () => {\n    return(\n      confirmAlert({\n        message: 'Are you sure?' ,\n        buttons: [\n          {\n            label: 'No',\n            onClick: () => {}\n          },\n          {\n            label: 'Yes',\n            onClick: () => deleteConfirmCallback()\n          }\n        ],\n      })\n    )\n  };\n\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION\n\n  const [deletePostOrMutation] = useMutation(mutation, {\n    update(proxy) {\n      \n      if (!commentId) {\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        })\n        data.getPosts = data.getPosts.filter((p) => p.id !== postId)\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data })\n      }\n      if (callback) {\n        callback()\n      }\n    },\n    variables: {\n      postId,\n      commentId\n    }\n  })\n\n  function deleteConfirmCallback() {\n    deletePostOrMutation()\n  }\n\n  return (\n    <div className='delete__button'>\n      <Tooltip left= \"-20px\"  message={commentId ? 'Delete comment' : 'Delete post'}>\n        <button\n          className='Button--delete'\n          type='button'\n          onClick={confirmDelete}\n        >\n          <FontAwesomeIcon icon={['fa', 'trash-alt']} />\n        </button>\n      </Tooltip>\n    </div>\n  );\n}\n\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '../Tooltip/Tooltip'\nimport { LIKE_POST_MUTATION } from '../../graphql.js/mutations'\n\nimport './LikeButton.css'\n\n\n\nexport default function LikeButton({ user, post: { id, likeCount, likes } }) {\n  const [liked, setLiked] = useState(false)\n\n  useEffect(() => {\n    if (user && likes.find((like) => like.name === user.name)) {\n      setLiked(false)\n    } else setLiked(false)\n  }, [user, likes]\n  )\n\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: { postId: id }\n  }\n  )\n  const moreThanZero = likeCount !== 0 ? true : false\n\n  const likeButton = \n\n  ( moreThanZero ?\n    (liked ? (\n      <button\n        className='Button--like'\n        type='button'\n      >\n        <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n        <span>{' '}{likeCount}</span>\n      </button>\n    ) : (\n    <button\n      className='Button--like'\n      type='button'\n    >\n      <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n      <span>{' '}{likeCount}</span>\n    </button>\n    ))\n\n    :\n\n    (liked ? (\n      <button\n        className='Button--like'\n        type='button'\n      >\n        <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n      </button>\n    ) : (\n    <button\n      className='Button--like'\n      type='button'\n    >\n      <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n    </button>\n    ))\n  )\n \n  return (\n    <div className='like__button' onClick={likePost}>\n      <Tooltip  left='-15px'\n        message={liked ? 'Unlike' : 'Like'}>\n          {likeButton}\n      </Tooltip>\n    </div>\n  )\n}\n\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {AuthContext} from '../../context/auth'\nimport CommentButton from '../CommentButton/CommentButton'\nimport DeleteButton from '../DeleteButton/DeleteButton'\nimport LikeButton from '../LikeButton/LikeButton'\n\n\nimport './PostCard.css'\n\n\n\nexport default function PostCard({\n  post: { body, createdAt, id, name, picture, likeCount, commentCount, likes }\n}) {\n  const { user } = useContext(AuthContext)\n \n  const formattedTime = moment(createdAt).fromNow()\n\n  return (\n    <section className='post-card__flex-container'>\n\n      <div className='post-card__thumbnail'>\n        <Link to={`/members/${id}`}>\n            <div className='post-card__thumbnail--round'>\n\n              <img \n                  src={picture}\n                  alt='member headshot'\n              >\n              </img>\n            </div>  \n        </Link>\n      </div>\n     \n      <div className='post-card__info'>\n          <h3 className='post-card__title'>\n            <Link to={`/posts/${id}`}>\n             {name}\n            </Link>\n          </h3>\n\n          <Link to={`/posts/${id}`}>\n            <span className='post-card__dates'>\n            {formattedTime}\n            </span>\n          </Link>\n\n          <p className='post-card__body'>\n          {body}\n          </p>\n\n          <div className='post-card__button-container__flex-container'>\n            <div className='other-buttons__container'>\n              <LikeButton \n                user={name} \n                post={{ id, likes, likeCount }} \n              /> \n              <CommentButton \n                post={{ id, commentCount }} \n              /> \n            </div>\n\n            <div className='delete-button__container'>\n              {user && user.name === name && <DeleteButton postId={id} />}\n            </div>\n          </div>\n\n        </div>\n    </section>\n  )\n}\n\n","import React from 'react'\n\nexport default function Form(props) {\n    const {className, ...otherProps} = props\n    return(\n        <form\n            className={[className].join(' ')}\n            action='#'\n            {...otherProps}\n        />\n    )\n}","import { useState } from 'react'\n\n\nexport const useForm = (callback, initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n       \n    const onChange = (event) => {\n        setValues({...values, [event.target.name]: event.target.value})\n      }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        callback()\n    }\n\n    return {\n        onChange,\n        onSubmit,\n        values\n    } \n}\n\n\n\n","\nimport React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { CREATE_POST_MUTATION } from '../../graphql.js/mutations'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport Form from '../../util/Form'\nimport { useForm } from '../../util/hooks'\n\nimport './PostForm.css'\n\n\n\nexport default function PostForm() {\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    body: ''\n  })\n\n\n  const [createPost, { loading }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts]\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data })\n      values.body = ''\n    }\n  }\n  \n  \n  );\n\n  function createPostCallback() {\n    createPost()\n  }\n\n  return (\n    <section className='add-post__form'>\n      <Form \n        onSubmit={onSubmit} \n        className={loading ? 'Loading add-post--loading' : ''}\n      >\n        <h3 className='add-post__title'>Create a post:</h3>\n\n        <div className='add-post__flex-container'>\n          <div className='add-post__form-group'>\n            <label htmlFor=\"post-content\">        \n              <textarea\n                className='new-post__content'\n                id='post-content-input'\n                placeholder=\"What's on your mind?\"\n                name=\"body\"\n                onChange={onChange}\n                value={values.body}\n              />\n            </label>\n          </div>\n\n          <div className='Button--submit add-post__button'>\n            <button type='submit'>\n              Submit\n            </button>\n          </div>\n        </div>\n      </Form>\n    </section>\n  );\n}\n","import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {AuthContext} from '../../context/auth'\nimport PostCard from '../../Components/PostCard/PostCard'\nimport PostForm from '../../Components/PostForm/PostForm'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\n\nimport './Home.css'\n\nexport default function Home() {\n  const { user } = useContext(AuthContext)\n  const { \n    loading, \n    data: { getPosts: posts }\n  } = useQuery(FETCH_POSTS_QUERY)\n\n  \n\n  return (\n    <section className='home-main'>\n    <h2 className='home__title'>Public Posts</h2>\n      <ul>\n      {user && (\n            <PostForm />\n        )}\n        {loading ? (\n          <h2>Loading posts..</h2>\n        ) : (\n          posts &&\n          posts.map((post) => (\n            <li key={post.id}>\n                <PostCard post={post} />\n            </li>\n          ))\n        )}\n      </ul>\n    </section>\n  )\n}\n\n","import React, { useContext, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport {AuthContext} from '../../context/auth'\nimport Form from '../../util/Form'\nimport { LOGIN_USER } from '../../graphql.js/mutations'\nimport { useForm } from '../../util/hooks'\n\nimport './Login.css'\n\n\nexport default function Login(props) {\n  const context = useContext(AuthContext)\n\n  // JWT - APP ROUTE\n  const [errors, setErrors] = useState({})\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: 'demo-user@email.com',\n    password: 'demo-user'\n  })\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }\n      }\n    ) {\n      context.login(userData)\n      props.history.push('/')\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  })\n\n  function loginUserCallback() {\n    loginUser()\n  }\n\n  return  (\n    <section className='login-main'>\n      \n      <div className='login-section'>\n      \n          <Form onSubmit={onSubmit} className={loading ? 'login-form loading-login' : 'login-form'}>\n            {Object.keys(errors).length > 0 && (\n              <div className=\"Error Message\">\n                <ul className=\"Error__list\">\n                  {Object.values(errors).map((value) => (\n                    <li key={value}>{value}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            <ul className=\"noBullet\">\n              <li>\n                <label htmlFor=\"Email\"> \n                  <input\n                    className='inputFields' \n                    id=\"email\"\n                    placeholder=\"Email...\"\n                    name=\"email\"\n                    type=\"text\"\n                    value={values.email}\n                    error={errors.email ? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </label>\n              </li>\n              <li>\n                <label htmlFor=\"Password\">\n                  <input\n                    className='inputFields'\n                    placeholder=\"Password...\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={values.password}\n                    error={errors.password ? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </label>\n              </li>\n              <li>\n                <input \n                  type=\"submit\" \n                  id=\"join-btn\" \n                  name=\"join\" \n                  alt=\"Join\" \n                  value=\"Login\"\n                />\n              </li>\n            </ul>\n          </Form>\n\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './MemberCard.css'\n\n\n\nexport default function MemberCard({\n    user: { id, name, city, state, picture, relation }\n}) \n    \n{return (\n    <section className='member-card__flex-container'>\n\n      <div className='member-card__thumbnail'>\n        <Link to={`/members/${id}`}>\n        <Tooltip  left='-15px'\n            message={relation}>\n          <div className='member-card__thumbnail--round'>\n            <img \n                src={picture}\n                alt='member headshot'\n            >\n            </img>\n          </div> \n          </Tooltip> \n        </Link>\n      </div>\n      \n      <div className='member-card__info'>\n      <Link to={`/members/${id}`}>\n        <h3 className='member-card__title'>\n            {name}\n        </h3>\n      </Link>\n        { city ? \n          (<p className='member-card__location'>\n              {city}, {state}\n            </p>\n          ) \n          : \n          ('')\n        }\n      </div>\n      \n    </section>\n  )\n}","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport MemberCard from '../../Components/MemberCard/MemberCard'\nimport { FETCH_USERS_QUERY } from '../../graphql.js/queries'\n\nimport './Members.css'\n\nexport default function Members() {\n  const { \n    loading, \n    data: { getUsers: users }\n  } = useQuery(FETCH_USERS_QUERY)\n  return (\n    <section className='members-main'>\n    <h2 className='members__title'>Group Members</h2>\n      <ul className='members__grid--container'>\n        {loading ? (\n          <h2>Loading members..</h2>\n        ) : (\n          users &&\n          users.map((user) => (\n            <li key={user.id}>\n                <MemberCard user={user} />\n            </li>\n          ))\n        )}\n      </ul>\n    </section>\n  )\n}","import React, { useContext, useState, useRef } from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {AuthContext} from '../../context/auth'\nimport CommentButton from '../../Components/CommentButton/CommentButton'\nimport DeleteButton from '../../Components/DeleteButton/DeleteButton'\nimport LikeButton from '../../Components/LikeButton/LikeButton'\nimport Form from '../../util/Form'\nimport { FETCH_POST_QUERY } from '../../graphql.js/queries'\nimport { SUBMIT_COMMENT_MUTATION } from '../../graphql.js/mutations'\n\nimport './SinglePost.css'\n\n\n\nexport default function SinglePost(props) {\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext); \n  const commentInputRef = useRef(null);\n  const [comment, setComment] = useState('');\n\n  const {\n    data: { getPost }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment('');\n      commentInputRef.current.blur();\n    },\n    variables: {\n      postId,\n      body: comment\n    }\n  });\n\n  function deletePostCallback() {\n    props.history.replace('/');\n  }\n\n  function goBack() {\n    props.history.replace('/')\n  }\n\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post..</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      name,\n      picture,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n\n    postMarkup = (\n      <section className='single-post-main'>\n        <h2 className='single-post__title'>Public Post</h2>\n          <button \n            className = \"Button--back\"\n            onClick = {goBack}\n          >\n            Back\n          </button>\n        \n        <div className='single-post-card__flex-container'>\n          \n          <div className='single-post-card__thumbnail'>\n              <div className='post-card__thumbnail--round'>\n                <img \n                    src={picture}\n                    alt='member headshot'\n                >\n                </img>\n              </div>  \n          </div>\n\n          <div className='single-post-card__info'>\n            <h3 className='single-post-card__title'>\n              <Link to={`/postId/${id}`}>\n                {name}\n              </Link>\n            </h3>\n            <div className='single-post-card__dates'>\n          <div className='single-post-card__dates-created_at'>\n                <span className='Date'>\n                  {moment(createdAt).fromNow()}\n                </span>\n              </div>\n            </div> \n            <p className='single-post-card__body'>{body}</p>\n            <div className='single-post-card__button-container__flex-container'>\n              <div className='single-other-buttons__container'>\n                <LikeButton \n                  user={name} \n                  post={{ id, likeCount, likes }} \n                />\n                <CommentButton \n                  post={{ id, commentCount }} \n                /> \n              </div>\n\n              <div className='single-post-card-delete-button__container'>\n                {user && user.name === name && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n \n        <div className='single-post-comments-section add-comment__form'>  \n          <Form>  \n            <h3 className='add-comment__form__title'>Share a Public Comment</h3>\n            \n            <div className='add-comment__flex-container'>\n              <div className='add-comment__form-group'>\n                <label htmlFor=\"comment-content\"> \n                  <textarea\n                    className='new-comment__content'\n                    id='comment-content-input'\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    name=\"comment\"\n                    value={comment}\n                    onChange={(event) => setComment(event.target.value)}\n                    ref={commentInputRef}\n                  />\n                </label>\n              </div>\n\n              <div className='Button--submit add-comment__button'>\n                <button\n                  type=\"submit\"\n                  disabled={comment.trim() === ''}\n                  onClick={submitComment}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </Form>    \n\n          <div className='comments'>\n            <ul className='comments__comment-list'>\n              {comments.map((comment) => (\n                <li key={comment.id} className='comment-in-list__flex-container'>\n                  <div className='comment__thumbnail--round'>\n                    <Link to={`/members/${id}`}>\n                        <div className='comment__thumbnail'>\n                          <img \n                              src={comment.picture}\n                              alt='member headshot'\n                          >\n                          </img>\n                        </div>  \n                    </Link>\n                  </div>\n\n                  <div className=\"comment__content__flex-container\">\n                    \n                    <div className=\"comment__info\">\n                      <h3 className='comment__title'>{comment.name}</h3>\n                      <div className='comment__dates'>\n                        <div className='comment__dates-created_at'>\n                          <span className='Date'>\n                            {moment(comment.createdAt).fromNow()}\n                          </span> \n                        </div>\n                      </div> \n                      <p className='comment__body'>{comment.body}</p>\n                    </div>\n\n                    <div className='comment__button-container__flex-container'>\n                      <div className='comment-card-other-buttons__container'>\n                        {/* TODO -- ADD LIKES AND LIKECOUNT TO COMMENTS / CHANGE post={{ id, likeCount, likes }}  */}\n                        <LikeButton \n                          className=\"comment__like-button\"\n                          user={name} \n                          post={{ id, likeCount, likes }} \n                        />\n                      </div>\n\n                      <div className='comment-card-delete-button__container'>\n                        {user && user.name === comment.name && (\n                          <DeleteButton postId={id} commentId={comment.id} />\n                        )}\n                      </div>\n                    </div>\n\n                  </div>\n                </li>\n              ))}\n              </ul>\n          </div>\n        </div>  \n      </section>\n    )\n  }\n  return postMarkup;\n}\n\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FETCH_USER_QUERY } from '../../graphql.js/queries'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport PostCard from '../../Components/PostCard/PostCard'\nimport './SingleMember.css'\n\n\n\nexport default function SingleMember(props) {\n\n    const userId = props.match.params.memberId;\n\n    const { \n        data: { getPosts: posts }\n    } = useQuery(FETCH_POSTS_QUERY)\n\n    const {\n        data: { getUser }\n    } = useQuery(FETCH_USER_QUERY, {\n        variables: {\n        userId\n        }\n    })\n\n    let userMarkup;\n    if (!getUser) {\n        userMarkup = <p>Loading user..</p>;\n    } else {\n        const {\n            name,\n            email,\n            phone,\n            city,\n            state,\n            about,\n            relation,\n            picture,\n            banner,\n        } = getUser;\n                \n    const getPostsFromMember = (posts) => {\n        const filteredPosts = []\n        posts.map((post) => (\n            post.name  === name ?  filteredPosts.push(post) : ''\n        ))\n        const sortedPosts = (filteredPosts).slice(0,5)\n        return(sortedPosts)\n    }\n\n    const infoTab = (\n        <div className='single-member-card__info'>\n    \n            {relation && (\n            <>\n                <p className='question'>\n                    What is your relation to the group? \n                </p>\n                <p className='answer'>\n                    {relation}\n                </p>\n            </>\n            )}\n\n            {about && (\n            <>\n                <p className='question'>\n                    What are your hobbies, interests, etc?\n                </p>\n                <p className='answer'>\n                    {about}\n                </p>\n            </>\n            )}\n            \n            {state && (\n            <>\n                <p className='question'>\n                    Where do you currently live?\n                </p>\n                <p className='answer'>\n                    {city}, {state}\n                </p>\n            </>\n            )}\n\n            \n            <p className='question'>\n                Contact Info:\n            </p>\n            {phone &&(<p className='answer'>\n                <FontAwesomeIcon icon={['fa', 'phone']} /> \n                {formatPhoneNumber(phone)}\n            </p>)}\n            {email && (<p className='answer'>\n                <FontAwesomeIcon icon={['fa', 'envelope']} /> \n                {email}\n            </p>)}\n\n        </div>\n    );\n\n\n    const postsTab = (\n        <div className='member__activity__section'>\n            <ul className='filtered-post-list'>\n                {getPostsFromMember(posts).map(post =>\n                <li key={post.id} className='filtered-post-in-list__flex-container'>\n                    <div className='Item__in__activity__list__FlexItem__Info'>\n                        <PostCard post={post} />\n                    </div>\n                </li>\n                )}\n            </ul>\n        </div>\n    )\n\n    const displayTabs = (\n        <Tabs defaultIndex={0} onSelect={index => (index)}>\n            <TabList>\n                <Tab>Info</Tab>\n                <Tab>Recent Posts</Tab>\n            </TabList>\n            <TabPanel>{infoTab}</TabPanel>\n            <TabPanel>{postsTab}</TabPanel>\n        </Tabs>\n    )\n\n    function formatPhoneNumber(phoneNumberString) {\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n        var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n        if (match) {\n          return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n        }\n        return null\n      }\n\n    function goBack() {\n        props.history.replace('/members')\n      }\n\n    userMarkup = (\n      <section className='single-member-main'>\n        <h2 className='single-member__title'>{name}</h2>\n\n        <button \n            className = \"Button--back\"\n            onClick = {goBack}\n        >\n            Back\n        </button>\n\n        <div className='single-member-card__profile-pix'>\n            {banner && (<div className='single-member-card__banner'>\n                <img \n                    src={banner}\n                    alt='member headshot'\n                >\n                </img>    \n            </div>)}\n            {picture && (<div className='single-member-card__thumbnail--round'>\n                <img \n                    src={picture}\n                    alt='member headshot'\n                >\n                </img>    \n            </div>)}\n        </div>\n\n        <div className='single-member-card__flex-container'>\n\n            <h2 className='single-member-card__name'>\n                {name}\n            </h2>\n\n            {displayTabs}\n\n        </div>\n        \n      </section>\n    )\n  }\n  return userMarkup;\n}\n\n\n\n\n\n","import React, { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { useMutation } from '@apollo/react-hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { GraphQLClient } from 'graphql-request'\n\nimport {AuthContext} from '../../context/auth'\nimport { useForm } from '../../util/hooks'\nimport { CREATE_PHOTO_MUTATION } from '../../graphql.js/mutations'\nimport { UPDATE_USER } from '../../graphql.js/mutations'\nimport Form from '../../util/Form'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\n\nimport './UpdateProfile.css'\n\n\n\nexport default function UpdateProfile(props) {\n  const [errors, setErrors] = useState({})\n  const [picture, setPicture] = useState('')\n\n  const { dispatch, user } = useContext(AuthContext)\n\n  const currentData = user\n  const newPicture = currentData.newPicture\n\n\n  let { onChange, onSubmit, values } = useForm(updateUserCallback, {\n    email: currentData.email,\n    about: '',\n    relation: '',\n    city: '',\n    state: '',\n    phone: '',\n    picture: newPicture || currentData.picture,\n    banner: currentData.banner\n  });\n\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\n    update(\n      _,\n      {\n        data: { update: userData }\n      }\n    ) {\n      props.history.push(`/members/${currentData.id}`)\n      // console.log('values: ', values)\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  const handleImageUpload = async () => {\n    const data = new FormData()\n    data.append('file', picture)\n    data.append('upload_preset', 'geopins')\n    data.append('cloud_name', 'amy-braswell')\n\n    const res = await axios.post(\n      'https://api.cloudinary.com/v1_1/amy-braswell/image/upload',\n      data\n    )\n    return res.data.url\n  }\n\n  const handleImageSubmit = async e => {\n    try {\n      e.preventDefault()\n      // upload image to Cloudinary and retrieve its URL\n      // grab the successfully logged-in user's Google idToken\n      const idToken = localStorage.getItem('jwtToken')\n      // create a GraphQL Client object, pass it the token as an auth header\n      const client = new GraphQLClient('http://localhost:4000/graphql', {\n        headers: {\n          authorization: idToken,\n        }, \n      })\n      const imageUrl = await handleImageUpload()\n      // create GraphQL variables object\n      const variables = {\n        picture: imageUrl,\n      }\n      // send mutation to create new Photo, grab response\n      let picture = await client.request(CREATE_PHOTO_MUTATION, variables)\n      // add new Photo to 'photo' in state\n      user.picture = await picture\n      let newPicture = user.picture.createPhoto.picture\n      dispatch({ type: 'CREATE_PHOTO', payload: newPicture })\n      // console.log('newPicture = user.picture.createPhoto.picture: ', newPicture)\n    } catch (err) {\n      console.error('Error creating Photo', err)\n    }\n  }\n\n  function updateUserCallback() {\n    updateUser()\n  }\n\n  function goBack() {\n    props.history.replace('/')\n  }\n\n  const infoTab = (\n    <div className='single-member-card__info'>\n            {Object.keys(errors).length > 0 && (\n              <div className=\"Error Message error\">\n                <ul className=\"Error__list\">\n                  {Object.values(errors).map((value) => (\n                    <li key={value}>{value}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* <Form onSubmit={handleImageSubmit} className={loading ? 'Loading register--loading' : ''}>\n          \n              <input\n                className='input--update-picture select-file'\n                name=\"picture\"\n                accept=\"image/*\"\n                id=\"image\"\n                type=\"file\"\n                onChange={e => setPicture(e.target.files[0])}\n              />\n\n              <div className=\"overlay-layer\">\n                Click here to select profile photo\n                </div>\n\n              <div className='Button--submit update__buttons button--upload'>\n                <button \n                  className='update--button'\n                  type='submit'>\n                  Upload\n                </button>\n              </div>\n            </Form> */}\n\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'Loading register--loading' : ''}>\n          \n              <p className='update-question'>\n                    How are you connected to the group? \n              </p>\n\n              <label htmlFor=\"Relation\"/>\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                  placeholder= {currentData.relation}\n                name=\"relation\"\n                type=\"text\"\n                value={values.relation}\n                error={errors.relation ? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <p className='update-question'>\n                  What are your hobbies, interests, etc?\n              </p>\n              \n              <label htmlFor=\"About\" />\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                placeholder={currentData.about}\n                name=\"about\"\n                type=\"text\"\n                value={values.about}\n                error={errors.about ? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <p className='update-question'>\n                  Where do you currently live?\n              </p>\n                  \n              <div className=\"update-answer-half__flex-container\">\n                \n                <div className=\"update-answer-half\">\n                  <label htmlFor=\"City\"/>\n                  <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n                  <input\n                    className='update-answer'\n                    placeholder={currentData.city}\n                    name=\"city\"\n                    type=\"text\"\n                    value={values.city}\n                    error={errors.city? 'true': 'false'}\n                    onChange={onChange}\n                  />\n\n                </div>\n                \n                <div className=\"update-answer-half\">\n                  <label htmlFor=\"State\" />\n                  <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n                  <input\n                    className='update-answer'\n                    placeholder={currentData.state}\n                    name=\"state\"\n                    type=\"text\"\n                    value={values.state}\n                    error={errors.state? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </div>\n              </div>\n\n              <p className='update-question'>\n                  Contact Info:\n              </p>\n\n              <label htmlFor=\"Phone\" />\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                placeholder={currentData.phone}\n                name=\"phone\"\n                type=\"text\"\n                value={values.phone}\n                error={errors.phone? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <div className='Button--submit update__buttons'>\n                <button \n                  className='update--button'\n                  type='submit'>\n                  Update\n                </button>\n              </div>\n\n              <div className='Button--submit update__buttons'>\n                <button \n                  className='update--button'\n                  type='cancel'\n                  onClick={goBack}\n                >\n                  Cancel\n                </button>\n                \n              </div>\n            </Form>\n\n    </div>\n  );\n\n  const displayTabs = (\n    <Tabs\n      defaultIndex={0} \n    >\n        <TabList>\n            <Tab>Update Info</Tab>\n        </TabList>\n        <TabPanel>{infoTab}</TabPanel>\n    </Tabs>\n  )\n\nreturn(\n  <section className='update-member-main'>\n    <h2 className='update-member__title'>Update Your Profile</h2>\n      \n      <div className='update-member-card__profile-pix'>\n        <div className='update-member-card__banner'>\n            <img \n                src={currentData.banner}\n                alt='member cover'\n            >\n            </img>    \n        </div>\n        <div className='update-member-card__thumbnail--round'>\n            <img \n                src={currentData.newPicture || currentData.picture}\n                alt='member headshot'\n            >\n            </img>    \n        </div>\n      </div>\n\n    <div className='update-member-card__flex-container'>\n\n        <h2 className='update-member-card__name'>\n          {currentData.name}\n        </h2>\n\n        {displayTabs}\n\n    </div>\n    \n      </section>\n    )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { faAddressCard, faBars, faCamera, faComment, faEdit, faEnvelope, faPencilAlt, faPhone, faThumbsUp, faTimes, faTrashAlt, faUsers } \n  from '@fortawesome/free-solid-svg-icons'\n\nimport { AuthProvider } from './context/auth'\nimport ProtectedRoute from './util/ProtectedRoute'\nimport Header from './Components/Header/Header'\nimport NavBar from './Components/NavBar/NavBar'\nimport Home from './Pages/Home/Home'\nimport Login from './Pages/Login/Login'\nimport Members from './Pages/Members/Members'\n// import Register from './Pages/Register/Register'\nimport SinglePost from './Pages/SinglePost/SinglePost'\nimport SingleMember from './Pages/SingleMember/SingleMember'\nimport UpdateProfile from './Pages/UpdateProfile/UpdateProfile'\n\nimport './App.css'\nimport 'semantic-ui-css/semantic.css';\n\n\nlibrary.add(\n  faAddressCard, \n  faBars, \n  faCamera,\n  faComment,  \n  faEdit,\n  faEnvelope, \n  faPencilAlt,\n  faPhone,\n  faThumbsUp, \n  faTimes,  \n  faTrashAlt, \n  faUsers, \n)\n\n\nfunction App() {\n\n\n  return ( \n    <div>\n    <AuthProvider>\n      <Router>\n        <div className='App'>\n          <div className='App__sidebar'>\n          <NavBar/>\n          </div>\n          <div className='navigation'>\n            <Header />\n          </div>\n          <main className='App__main'>\n            <ProtectedRoute exact path=\"/\" component={Home} />\n            <ProtectedRoute exact path=\"/posts\" component={Home} />\n            <ProtectedRoute exact path=\"/posts/:postId\" component={SinglePost} />\n            <ProtectedRoute exact path=\"/members\" component={Members} />\n            <ProtectedRoute exact path=\"/members/:memberId\" component={SingleMember} />\n            <ProtectedRoute exact path=\"/update\" component={UpdateProfile} />\n            <Route exact path=\"/login\" component={Login} />\n            {/* <Route exact path=\"/register\" component={Register} /> */}\n          </main>\n        </div>\n      </Router>\n    </AuthProvider>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from 'apollo-link-context';\n\n\nconst httpLink = createHttpLink({\n  uri: 'https://connectivity-braswell.herokuapp.com/'\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);","import ReactDOM from 'react-dom'\nimport ApolloProvider from './ApolloProvider'\nimport './index.css'\n\nReactDOM.render(ApolloProvider, document.getElementById('root'))"],"sourceRoot":""}