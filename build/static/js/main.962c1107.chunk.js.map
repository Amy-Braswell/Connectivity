{"version":3,"sources":["context/auth.js","util/ProtectedRoute.js","Components/Dropdown/Dropdown.js","Components/MenuBar/MenuBar.js","Components/Header/Header.js","Components/Tooltip/Tooltip.js","Components/NavBar/NavBar.js","Components/CommentButton/CommentButton.js","graphql.js/mutations.js","graphql.js/queries.js","Components/DeleteButton/DeleteButton.js","Components/LikeButton/LikeButton.js","Components/PostCard/PostCard.js","util/Form.js","util/hooks.js","Components/PostForm/PostForm.js","Pages/Home/Home.js","Pages/Login/Login.js","Components/MemberCard/MemberCard.js","Pages/Members/Members.js","Pages/Register/Register.js","Pages/SinglePost/SinglePost.js","Pages/SingleMember/SingleMember.js","Pages/UpdateProfile/UpdateProfile.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","AuthContext","createContext","photos","isAuth","userEmail","login","userData","logout","updateUser","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","ContextReducer","state","_ref","type","payload","Object","objectSpread2","newPicture","AuthProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","assign","value","setItem","token","tokenId","ProtectedRoute","Component","component","rest","objectWithoutProperties","useContext","react_router","render","to","Dropdown","title","_ref$items","items","_useState","multiSelect","useState","_useState2","open","setOpen","toggle","handleClickOutside","className","tabIndex","role","onKeyPress","onClick","react_fontawesome_index_es","icon","map","item","key","id","clickOutsideConfig","onClickOutside","MenuBar","_useContext","react_router_dom","name","Header","loggedInItems","loggedOutItems","MenuBar_MenuBar","Components_Dropdown_Dropdown","Tooltip","style","color","children","top","left","message","NavBar","Tooltip_Tooltip","CommentButton","_ref$post","post","commentCount","commentButton","concat","LOGIN_USER","gql","_templateObject","REGISTER_USER","_templateObject2","UPDATE_USER","_templateObject3","CREATE_POST_MUTATION","_templateObject4","DELETE_POST_MUTATION","_templateObject5","LIKE_POST_MUTATION","_templateObject6","SUBMIT_COMMENT_MUTATION","_templateObject7","DELETE_COMMENT_MUTATION","_templateObject8","CREATE_PHOTO_MUTATION","FETCH_POSTS_QUERY","queries_templateObject","FETCH_POST_QUERY","queries_templateObject2","FETCH_USERS_QUERY","queries_templateObject3","FETCH_USER_QUERY","queries_templateObject4","queries_templateObject5","queries_templateObject6","DeleteButton","postId","commentId","callback","mutation","_useMutation","useMutation","update","proxy","data","readQuery","query","getPosts","filter","p","writeQuery","variables","deletePostOrMutation","confirmAlert","buttons","label","LikeButton","likeCount","likes","liked","setLiked","useEffect","find","like","likePost","likeButton","PostCard","body","createdAt","picture","formattedTime","moment","fromNow","src","alt","LikeButton_LikeButton","CommentButton_CommentButton","DeleteButton_DeleteButton","Form","otherProps","join","action","useForm","arguments","length","undefined","values","setValues","onChange","event","defineProperty","target","onSubmit","preventDefault","PostForm","_useForm","createPost","result","toConsumableArray","_useMutation2","loading","htmlFor","placeholder","Home","_useQuery","useQuery","posts","PostForm_PostForm","PostCard_PostCard","Login","context","errors","setErrors","loginUser","email","password","_","history","push","onError","err","graphQLErrors","extensions","exception","keys","error","MemberCard","_ref$user","city","relation","Members","users","getUsers","MemberCard_MemberCard","Register","addUser","confirmPassword","register","replace","noValidate","SinglePost","postMarkup","match","params","commentInputRef","useRef","comment","setComment","getPost","current","blur","submitComment","comments","ref","disabled","trim","SingleMember","userMarkup","userId","memberId","getUser","phone","about","banner","infoTab","Fragment","phoneNumberString","formatPhoneNumber","postsTab","filteredPosts","slice","getPostsFromMember","displayTabs","esm","defaultIndex","onSelect","index","UpdateProfile","_useState3","_useState4","setPicture","currentData","handleImageUpload","_ref2","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","FormData","append","axios","sent","abrupt","url","stop","apply","this","handleImageSubmit","_ref3","_callee2","e","idToken","client","imageUrl","_picture","_newPicture","_context2","GraphQLClient","headers","authorization","request","createPhoto","t0","console","_x","accept","files","library","add","faAddressCard","faBars","faCamera","faComment","faEdit","faEnvelope","faPencilAlt","faPhone","faThumbsUp","faTimes","faTrashAlt","faUsers","App","NavBar_NavBar","Header_Header","util_ProtectedRoute","exact","path","httpLink","createHttpLink","uri","authLink","setContext","Authorization","ApolloClient","link","cache","InMemoryCache","ApolloProvider","react_common_esm","src_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.962c1107.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\n\nconst initialState = {\n  user: null\n};\n\nconst AuthContext = createContext({\n  user: null,\n  photos: [],\n  isAuth: false,\n  userEmail: null,\n  login: (userData) => {},\n  logout: () => {},\n  updateUser: (userData) => {}\n});\n\n\n\n  if (localStorage.getItem('jwtToken')) {\n    const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n    if (decodedToken.exp * 1000 < Date.now()) {\n      localStorage.removeItem('jwtToken');\n    }   \n    else {\n      initialState.user = decodedToken;\n      }\n    } \n\n\n\nfunction ContextReducer(state, { type, payload}) {\n  switch (type) {\n    case \"CREATE_PHOTO\":\n      // console.log('CREATE_PHOTO_CASE has run... payload is: ', payload)\n      // console.log('updated state is: ', state)\n      return {\n        ...state,\n        newPicture: payload\n      };\n    case 'LOGIN':\n      return {\n        ...state,\n        user: payload \n      }\n      ;\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\n\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(ContextReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token || userData.tokenId)\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  \n\n  return (\n    <AuthContext.Provider\n    value={{ user: state.user, photos: state.photos, isAuth: state.isAuth, login, logout, dispatch }}\n    {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider, ContextReducer }","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport onClickOutside from 'react-onclickoutside'\nimport './Dropdown.css'\n\n\n\nfunction Dropdown({ title, items = [], multiSelect = false }) {\n    const [open, setOpen] = useState(false)\n    const toggle = () => setOpen(!open)\n    Dropdown.handleClickOutside = () => setOpen(false)\n\n    return (\n        <div className=\"dd-wrapper\">\n            <div \n                tabIndex={0} \n                className=\"dd-header\" \n                role=\"button\"\n                onKeyPress={() => toggle(!open)} \n                onClick={() => toggle(!open)}  \n            >  \n                <div className='dd-header__title'>\n                    <p className='dd-header__title--bold'>{title}</p>\n                </div>\n                <div className='dd-header__action'>\n                    <p>{open ? <FontAwesomeIcon className='bars' icon={['fas', 'times']} /> : <FontAwesomeIcon className='times' icon={['fas', 'bars']} /> }</p>\n                </div>\n            </div>\n            {open && (\n                <ul className='dd__list'>\n                    {items.map(item => (\n                        <li className='dd__list-item' key={item.id}>\n                            <button className='dd__li__button' type='button' onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)}>  \n                                {item.value}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: () => Dropdown.handleClickOutside\n}\n\nexport default onClickOutside(Dropdown, clickOutsideConfig)\n\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {AuthContext} from '../../context/auth'\nimport './MenuBar.css'\n\n\n\nexport default function MenuBar() {\n  const { user, logout } = useContext(AuthContext)\n\n  const menuBar = user ? (\n    <nav>\n      <div className='menubar__flex-container'>\n        <div className='menubar__flex-item'>\n          <Link to={'/'}>\n          { user && (user.name)}\n          </Link>\n        </div>\n        <div className='menubar__flex-item'>\n          <Link to={'/login'} onClick={logout}>\n            Logout\n          </Link>\n        </div>\n      </div>\n    </nav>\n  ) : (\n    <nav>\n      <div className='menubar__flex-container'>\n        <div className='menubar__flex-item'>\n          <Link to={'/register'}>\n            Register\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n\n  return menuBar;\n}","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {AuthContext} from '../../context/auth'\nimport Dropdown from '../Dropdown/Dropdown'\nimport MenuBar from '../MenuBar/MenuBar'\n\nimport './Header.css'\n\n\n\nexport default function Header() {\n    const { user, logout } = useContext(AuthContext)\n\n    const loggedInItems = [\n        {\n            id: 1,\n            value: <Link to={'/about'}><span className='dd__li--width'>About</span></Link>\n        },\n        {\n            id: 2,\n            value: <Link to={'/login'} onClick={logout}><span className='dd__li--width'>Logout</span></Link>\n        }\n      ]\n    \n      const loggedOutItems = [\n        {\n            id: 1,\n            value: <Link to={'/register'}><span className='dd__li--width'>Register</span></Link>\n        }\n      ]\n\n    return(\n        <header>\n            <div className='Desktop__header'>\n                <div className='app__header__logo__container'>\n                    <h1>\n                        <Link to='/'>Connectivity</Link>{' '}\n                    </h1>\n                </div>\n\n                <div className='menubar__container'>\n                    <MenuBar />\n                </div>  \n            </div>\n\n            <div className='Mobile__header'>\n                <div className='app__header__logo__container'>\n                    <h1>\n                        <Link to='/'>Connectivity</Link>{' '}\n                    </h1>\n                </div>\n                <div className=\"dropdown__container\">\n                    {user ?\n                        <Dropdown items={loggedInItems}/> \n                        :\n                        <Dropdown items={loggedOutItems}/> \n                    }\n                </div>\n            </div>\n\n        </header>\n    )\n}","import React from 'react'\nimport './Tooltip.css'\n\nexport default function Tooltip(props) {\n    return(\n        <span className='Tooltip'>\n            <span \n                className ='Tooltip-content'\n                style={{ color: props.color }}\n            >\n                {props.children}\n            </span>\n            <div className='Tooltip-message'\n                 style={{ top: props.top, left: props.left}}      \n            >\n                {props.message}\n            </div>\n        </span>\n    )\n}","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {AuthContext} from '../../context/auth'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './NavBar.css'\n\n\n\nexport default function NavBar() {\n  const { user } = useContext(AuthContext)\n\n  const navBar = !user ? (\n    <div>{''}</div>\n  ) : (\n    <nav className='nav'>\n      <div className='nav__flex-container nav__bar'>\n        <div className='nav__item'>\n          <Tooltip message='Posts'>\n            <Link to={'/'} name=\"posts\">\n              <FontAwesomeIcon icon={['fa', 'address-card']} />\n            </Link>\n          </Tooltip>\n        </div>\n        <div className='nav__item'>\n          <Tooltip message='Members'>\n            <Link to={'/members'} name=\"members\">\n              <FontAwesomeIcon icon={['fa', 'users']} />\n            </Link>\n          </Tooltip>\n        </div>\n        <div className='nav__item'>\n          <Tooltip message='Edit Profile'>\n            <Link to={'/update'} name=\"update\">\n              <FontAwesomeIcon icon={['fa', 'pencil-alt']} />\n            </Link>\n          </Tooltip>\n        </div>\n      </div>\n    </nav>\n  )\n\n  return navBar\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '../Tooltip/Tooltip'\n\nimport './CommentButton.css'\n\n\n\nexport default function CommentButton({ post: {id, commentCount}}) {\n    \n    const moreThanZero = commentCount !== 0 ? true : false\n\n    const commentButton = \n\n    ( moreThanZero ?\n        (\n        <button\n        className='Button--comment'\n        type='button'\n        >\n        <span> <FontAwesomeIcon icon={['fas', 'comment']} />{' '}</span>\n        <span>{' '}{commentCount}</span>\n        </button>\n        )\n\n        :\n\n        (\n        <button\n            className='Button--comment'\n            type='button'\n        >\n            <span><FontAwesomeIcon icon={['fas', 'comment']} />{' '}</span>\n        </button>\n        ) \n    )\n\n    return (\n        <div className='comment__button'>\n              <Tooltip message=\"Comment\">\n                <Link to={`/posts/${id}`}> \n                    {commentButton}\n                </Link>\n              </Tooltip> \n        </div>\n    )\n\n}","import gql from 'graphql-tag';\n\n\n\nexport const LOGIN_USER = gql`\nmutation login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    id\n    email\n    name\n    about\n    city\n    state\n    picture\n    banner\n    phone\n    relation\n    createdAt\n    token\n  }\n}\n`\n\nexport const REGISTER_USER = gql`\nmutation register(\n  $name: String!\n  $email: String!\n  $password: String!\n  $confirmPassword: String!\n) {\n  register(\n    registerInput: {\n      name: $name\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n    }\n  ) {\n    id\n    email\n    name\n    createdAt\n    token\n  }\n}\n`;\n\nexport const UPDATE_USER = gql`\nmutation updateProfile(\n  $email: String!\n  $phone: String\n  $city: String\n  $state: String\n  $about: String\n  $relation: String\n  $picture: String\n  $banner: String\n) {\n  updateProfile(\n    updateInput: {\n      email: $email\n      phone: $phone\n      city: $city\n      state: $state\n      about: $about\n      relation: $relation\n      picture: $picture\n      banner: $banner\n    }\n  ) {\n    email\n    phone\n    city\n    state\n    about\n    relation\n    picture\n    banner \n  }\n}\n`;\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likes {\n        id\n        name\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        picture\n        name\n        createdAt\n      }\n      commentCount\n    }\n  }\n`\n\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`\n\nexport const LIKE_POST_MUTATION = gql`\nmutation likePost($postId: ID!) {\n  likePost(postId: $postId) {\n    id\n    likes {\n      id\n      name\n    }\n    likeCount\n  }\n}\n`\n\nexport const SUBMIT_COMMENT_MUTATION = gql`\n  mutation createComment($postId: ID!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        picture\n        createdAt\n        name\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        name\n        createdAt\n        picture\n        body\n      }\n      commentCount\n    }\n  }\n`\n\nexport const CREATE_PHOTO_MUTATION = `\nmutation($picture: String!) {\n  createPhoto(\n    picture: $picture,\n  ) {\n    picture\n  }\n}\n`\n\nexport const CREATE_BANNER_MUTATION = `\nmutation($banner: String!) {\n  createBanner(\n    banner: $banner,\n  ) {\n    banner\n  }\n}\n`\n\n\n\n\n\n","import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n  {\n    getPosts {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likeCount\n      likes {\n        name\n      }\n      commentCount\n      comments {\n        id\n        name\n        picture\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      name\n      userId\n      picture\n      likeCount\n      likes {\n        name\n      }\n      commentCount\n      comments {\n        id\n        name\n        picture\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport const FETCH_USERS_QUERY = gql`\n  {\n    getUsers {\n    id\n    name\n    phone\n    about\n    city\n    state\n    relation\n    email\n    picture\n    banner\n    token\n    createdAt\n    }\n  }\n`;\n\nexport const FETCH_USER_QUERY = gql`\n  query($userId: ID!) {\n    getUser(userId: $userId) {\n    id\n    name\n    phone\n    about\n    city\n    state\n    relation\n    banner\n    email\n    picture\n    createdAt\n    }\n  }\n`;\n\nexport const FETCH_PHOTOS_QUERY = gql`\n  {\n    getPhotos {\n      id\n      image\n      createdAt\n      folder{\n        name\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const FETCH_PHOTO_QUERY = gql`\n  query($photoId: ID!) {\n    getPhoto(photoId: $photoId) {\n      id\n      image\n      createdAt\n      folder{\n        name\n        createdAt\n      }\n    }\n  }\n`;\n\n\n\n","import React from 'react'\nimport {confirmAlert} from 'react-confirm-alert'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { DELETE_COMMENT_MUTATION, DELETE_POST_MUTATION } from '../../graphql.js/mutations'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './DeleteButton.css'\n\n\n\nexport default function DeleteButton({ postId, commentId, callback }) {\n\n  const confirmDelete = () => {\n    return(\n      confirmAlert({\n        message: 'Are you sure?' ,\n        buttons: [\n          {\n            label: 'No',\n            onClick: () => {}\n          },\n          {\n            label: 'Yes',\n            onClick: () => deleteConfirmCallback()\n          }\n        ],\n      })\n    )\n  };\n\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION\n\n  const [deletePostOrMutation] = useMutation(mutation, {\n    update(proxy) {\n      \n      if (!commentId) {\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        })\n        data.getPosts = data.getPosts.filter((p) => p.id !== postId)\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data })\n      }\n      if (callback) {\n        callback()\n      }\n    },\n    variables: {\n      postId,\n      commentId\n    }\n  })\n\n  function deleteConfirmCallback() {\n    deletePostOrMutation()\n  }\n\n  return (\n    <div className='delete__button'>\n      <Tooltip left= \"-20px\"  message={commentId ? 'Delete comment' : 'Delete post'}>\n        <button\n          className='Button--delete'\n          type='button'\n          onClick={confirmDelete}\n        >\n          <FontAwesomeIcon icon={['fa', 'trash-alt']} />\n        </button>\n      </Tooltip>\n    </div>\n  );\n}\n\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '../Tooltip/Tooltip'\nimport { LIKE_POST_MUTATION } from '../../graphql.js/mutations'\n\nimport './LikeButton.css'\n\n\n\nexport default function LikeButton({ user, post: { id, likeCount, likes } }) {\n  const [liked, setLiked] = useState(false)\n\n  useEffect(() => {\n    if (user && likes.find((like) => like.name === user.name)) {\n      setLiked(false)\n    } else setLiked(false)\n  }, [user, likes]\n  )\n\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: { postId: id }\n  }\n  )\n  const moreThanZero = likeCount !== 0 ? true : false\n\n  const likeButton = \n\n  ( moreThanZero ?\n    (liked ? (\n      <button\n        className='Button--like'\n        type='button'\n      >\n        <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n        <span>{' '}{likeCount}</span>\n      </button>\n    ) : (\n    <button\n      className='Button--like'\n      type='button'\n    >\n      <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n      <span>{' '}{likeCount}</span>\n    </button>\n    ))\n\n    :\n\n    (liked ? (\n      <button\n        className='Button--like'\n        type='button'\n      >\n        <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n      </button>\n    ) : (\n    <button\n      className='Button--like'\n      type='button'\n    >\n      <span> <FontAwesomeIcon icon={['fa', 'thumbs-up']} />{' '}</span>\n    </button>\n    ))\n  )\n \n  return (\n    <div className='like__button' onClick={likePost}>\n      <Tooltip  left='-15px'\n        message={liked ? 'Unlike' : 'Like'}>\n          {likeButton}\n      </Tooltip>\n    </div>\n  )\n}\n\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {AuthContext} from '../../context/auth'\nimport CommentButton from '../CommentButton/CommentButton'\nimport DeleteButton from '../DeleteButton/DeleteButton'\nimport LikeButton from '../LikeButton/LikeButton'\n\n\nimport './PostCard.css'\n\n\n\nexport default function PostCard({\n  post: { body, createdAt, id, name, picture, likeCount, commentCount, likes }\n}) {\n  const { user } = useContext(AuthContext)\n \n  const formattedTime = moment(createdAt).fromNow()\n\n  return (\n    <section className='post-card__flex-container'>\n\n      <div className='post-card__thumbnail'>\n        <Link to={`/members/${id}`}>\n            <div className='post-card__thumbnail--round'>\n\n              <img \n                  src={picture}\n                  alt='member headshot'\n              >\n              </img>\n            </div>  \n        </Link>\n      </div>\n     \n      <div className='post-card__info'>\n          <h3 className='post-card__title'>\n            <Link to={`/posts/${id}`}>\n             {name}\n            </Link>\n          </h3>\n\n          <Link to={`/posts/${id}`}>\n            <span className='post-card__dates'>\n            {formattedTime}\n            </span>\n          </Link>\n\n          <p className='post-card__body'>\n          {body}\n          </p>\n\n          <div className='post-card__button-container__flex-container'>\n            <div className='other-buttons__container'>\n              <LikeButton \n                user={name} \n                post={{ id, likes, likeCount }} \n              /> \n              <CommentButton \n                post={{ id, commentCount }} \n              /> \n            </div>\n\n            <div className='delete-button__container'>\n              {user && user.name === name && <DeleteButton postId={id} />}\n            </div>\n          </div>\n\n        </div>\n    </section>\n  )\n}\n\n","import React from 'react'\n\nexport default function Form(props) {\n    const {className, ...otherProps} = props\n    return(\n        <form\n            className={[className].join(' ')}\n            action='#'\n            {...otherProps}\n        />\n    )\n}","import { useState } from 'react'\n\n\nexport const useForm = (callback, initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n       \n    const onChange = (event) => {\n        setValues({...values, [event.target.name]: event.target.value})\n      }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        callback()\n    }\n    return {\n        onChange,\n        onSubmit,\n        values\n    } \n}\n\n\n\n","\nimport React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { CREATE_POST_MUTATION } from '../../graphql.js/mutations'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport Form from '../../util/Form'\nimport { useForm } from '../../util/hooks'\n\nimport './PostForm.css'\n\n\n\nexport default function PostForm() {\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    body: ''\n  })\n\n\n  const [createPost, { loading }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts]\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data })\n      values.body = ''\n    }\n  }\n  \n  \n  );\n\n  function createPostCallback() {\n    createPost()\n  }\n\n  return (\n    <section className='add-post__form'>\n      <Form \n        onSubmit={onSubmit} \n        className={loading ? 'Loading add-post--loading' : ''}\n      >\n        <h3 className='add-post__title'>Create a post:</h3>\n\n        <div className='add-post__flex-container'>\n          <div className='add-post__form-group'>\n            <label htmlFor=\"post-content\">        \n              <textarea\n                className='new-post__content'\n                id='post-content-input'\n                placeholder=\"What's on your mind?\"\n                name=\"body\"\n                onChange={onChange}\n                value={values.body}\n              />\n            </label>\n          </div>\n\n          <div className='Button--submit add-post__button'>\n            <button type='submit'>\n              Submit\n            </button>\n          </div>\n        </div>\n      </Form>\n    </section>\n  );\n}\n","import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {AuthContext} from '../../context/auth'\nimport PostCard from '../../Components/PostCard/PostCard'\nimport PostForm from '../../Components/PostForm/PostForm'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\n\nimport './Home.css'\n\nexport default function Home() {\n  const { user } = useContext(AuthContext)\n  const { \n    loading, \n    data: { getPosts: posts }\n  } = useQuery(FETCH_POSTS_QUERY)\n\n  \n\n  return (\n    <section className='home-main'>\n    <h2 className='home__title'>Public Posts</h2>\n      <ul>\n      {user && (\n            <PostForm />\n        )}\n        {loading ? (\n          <h2>Loading posts..</h2>\n        ) : (\n          posts &&\n          posts.map((post) => (\n            <li key={post.id}>\n                <PostCard post={post} />\n            </li>\n          ))\n        )}\n      </ul>\n    </section>\n  )\n}\n\n","import React, { useContext, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport {AuthContext} from '../../context/auth'\nimport Form from '../../util/Form'\nimport { LOGIN_USER } from '../../graphql.js/mutations'\nimport { useForm } from '../../util/hooks'\n\nimport './Login.css'\n\n\nexport default function Login(props) {\n  const context = useContext(AuthContext)\n\n  // JWT - APP ROUTE\n  const [errors, setErrors] = useState({})\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: '',\n    password: ''\n  })\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }\n      }\n    ) {\n      context.login(userData)\n      props.history.push('/')\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  })\n\n  function loginUserCallback() {\n    loginUser()\n  }\n\n  return  (\n    <section className='login-main'>\n      \n      <div className='signupSection'>\n      \n          {Object.keys(errors).length > 0 && (\n            <div className=\"Error Message\">\n              <ul className=\"Error__list\">\n                {Object.values(errors).map((value) => (\n                  <li key={value}>{value}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          <Form onSubmit={onSubmit} className={loading ? 'signupForm loading-login' : 'signupForm'}>\n            <ul className=\"noBullet\">\n              <li>\n                <label htmlFor=\"Email\"> \n                  <input\n                    className='inputFields' \n                    id=\"email\"\n                    placeholder=\"Email...\"\n                    name=\"email\"\n                    type=\"text\"\n                    value={values.email}\n                    error={errors.email ? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </label>\n              </li>\n              <li>\n                <label htmlFor=\"Password\">\n                  <input\n                    className='inputFields'\n                    placeholder=\"Password...\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={values.password}\n                    error={errors.password ? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </label>\n              </li>\n              <li>\n                <input \n                  type=\"submit\" \n                  id=\"join-btn\" \n                  name=\"join\" \n                  alt=\"Join\" \n                  value=\"Login\"\n                />\n              </li>\n            </ul>\n          </Form>\n\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '../Tooltip/Tooltip'\nimport './MemberCard.css'\n\n\n\nexport default function MemberCard({\n    user: { id, name, city, state, picture, relation }\n}) \n    \n{return (\n    <section className='member-card__flex-container'>\n\n      <div className='member-card__thumbnail'>\n        <Link to={`/members/${id}`}>\n        <Tooltip  left='-15px'\n            message={relation}>\n          <div className='member-card__thumbnail--round'>\n            <img \n                src={picture}\n                alt='member headshot'\n            >\n            </img>\n          </div> \n          </Tooltip> \n        </Link>\n      </div>\n      \n      <div className='member-card__info'>\n      <Link to={`/members/${id}`}>\n        <h3 className='member-card__title'>\n            {name}\n        </h3>\n      </Link>\n        { city ? \n          (<p className='member-card__location'>\n              {city}, {state}\n            </p>\n          ) \n          : \n          ('')\n        }\n      </div>\n      \n    </section>\n  )\n}","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport MemberCard from '../../Components/MemberCard/MemberCard'\nimport { FETCH_USERS_QUERY } from '../../graphql.js/queries'\n\nimport './Members.css'\n\nexport default function Members() {\n  const { \n    loading, \n    data: { getUsers: users }\n  } = useQuery(FETCH_USERS_QUERY)\n  return (\n    <section className='members-main'>\n    <h2 className='members__title'>Group Members</h2>\n      <ul className='members__grid--container'>\n        {loading ? (\n          <h2>Loading members..</h2>\n        ) : (\n          users &&\n          users.map((user) => (\n            <li key={user.id}>\n                <MemberCard user={user} />\n            </li>\n          ))\n        )}\n      </ul>\n    </section>\n  )\n}","import React, { useContext, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport {AuthContext} from '../../context/auth'\nimport { useForm } from '../../util/hooks'\nimport { REGISTER_USER } from '../../graphql.js/mutations'\nimport Form from '../../util/Form'\n\nimport './Register.css'\n\n\n\nexport default function Register(props) {\n  const context = useContext(AuthContext)\n  const [errors, setErrors] = useState({})\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData)\n      props.history.replace('/update')\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function registerUser() {\n    addUser()\n  }\n\n  return (\n    <section className='register-main'>\n      <div className='register__title'>         \n        <h2>Greetings!</h2>\n      </div>      \n      <div className='registration__statement'>\n      <p>\n        I wanted to let you know that Charles fell and broke his hip last Tuesday.\n      </p>\n\n      <p> Luckily, he is doing alright and is out of the hospital. However, he will need to \n        do in-patient therapy for the next 8 weeks.\n      </p>\n\n      <p>\n        During this time, he will be staying at Symphony Care Network's South Shore location. \n        If you would like to send him a card, please address it to \"Symphony Care Network c/o Charles Smith, 2425 E. 71st Street, Chicago, IL 60649\".\n      </p>\n\n      <p>\n        Also, the facility has set up this private, members-only network for us to use so we can communicate\n        with Charles and with each other. I will try to post a weekly status update on the Login page so you'll \n        know how he is doing. \n      </p>\n\n      <p>\n        Please take a moment to register for our family group so we can keep you updated. This will also let you \n        reach out to Charles directly... I know he would love to hear from you!\n      </p>\n\n      <p>\n        This is a private group that is only available to those who are invited. Your information will not be shared with \n        anyone outside of the group. Once you join, please feel free to invite anyone I may have overlooked.\n      </p>\n\n      <p>\n        Best wishes,\n      <br></br>\n        Susie\n      </p>\n      </div>\n\n      <div className='register__flex-container'>\n        <div className='register__img-container'>\n          <img \n            src='https://res.cloudinary.com/connectivity/image/upload/c_scale,w_1000/v1592862388/Charles_95th_BDay-15_copy_n5tdhl.jpg'\n            alt='patient headshot'\n          >\n          </img>    \n        </div>\n\n        <div className='register__info-container'>\n\n          <div className='register__form-group'>\n            {Object.keys(errors).length > 0 && (\n              <div className=\"Error Message\">\n                <ul className=\"Error__list\">\n                  {Object.values(errors).map((value) => (\n                    <li key={value}>{value}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'loading-register' : ''}>\n              <h3 className='register__form-title'>Register</h3>\n              <label htmlFor=\"Name\">\n                <input\n                  className='register__form-group'\n                  placeholder=\"Name..\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={values.name}\n                  error={errors.name ? true : false}\n                  onChange={onChange}\n                />\n              </label>\n              <label htmlFor=\"Email\">\n                <input\n                  className='register__form-group'\n                  placeholder=\"Email..\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={values.email}\n                  error={errors.email ? true : false}\n                  onChange={onChange}\n                />\n              </label>\n              <label htmlFor=\"Password\">\n                <input\n                  className='register__form-group'\n                  placeholder=\"Password..\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={values.password}\n                  error={errors.password ? true : false}\n                  onChange={onChange}\n                />\n              </label>\n              <label htmlFor=\"Confirm Password\">\n                <input\n                  label=\"Confirm Password\"\n                  className='register__form-group'\n                  placeholder=\"Confirm Password..\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  error={errors.confirmPassword ? true : false}\n                  onChange={onChange}\n                />\n              </label>\n              <div className='Button--submit register__button'>\n                <button type='submit'>\n                  Register\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\n\n","import React, { useContext, useState, useRef } from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {AuthContext} from '../../context/auth'\nimport CommentButton from '../../Components/CommentButton/CommentButton'\nimport DeleteButton from '../../Components/DeleteButton/DeleteButton'\nimport LikeButton from '../../Components/LikeButton/LikeButton'\nimport Form from '../../util/Form'\nimport { FETCH_POST_QUERY } from '../../graphql.js/queries'\nimport { SUBMIT_COMMENT_MUTATION } from '../../graphql.js/mutations'\n\nimport './SinglePost.css'\n\n\n\nexport default function SinglePost(props) {\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext); \n  const commentInputRef = useRef(null);\n  const [comment, setComment] = useState('');\n\n  const {\n    data: { getPost }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment('');\n      commentInputRef.current.blur();\n    },\n    variables: {\n      postId,\n      body: comment\n    }\n  });\n\n  function deletePostCallback() {\n    props.history.replace('/');\n  }\n\n  function goBack() {\n    props.history.replace('/')\n  }\n\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post..</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      name,\n      picture,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n\n    postMarkup = (\n      <section className='single-post-main'>\n        <h2 className='single-post__title'>Public Post</h2>\n          <button \n            className = \"Button--back\"\n            onClick = {goBack}\n          >\n            Back\n          </button>\n        \n        <div className='single-post-card__flex-container'>\n          \n          <div className='single-post-card__thumbnail'>\n              <div className='post-card__thumbnail--round'>\n                <img \n                    src={picture}\n                    alt='member headshot'\n                >\n                </img>\n              </div>  \n          </div>\n\n          <div className='single-post-card__info'>\n            <h3 className='single-post-card__title'>\n              <Link to={`/postId/${id}`}>\n                {name}\n              </Link>\n            </h3>\n            <div className='single-post-card__dates'>\n          <div className='single-post-card__dates-created_at'>\n                <span className='Date'>\n                  {moment(createdAt).fromNow()}\n                </span>\n              </div>\n            </div> \n            <p className='single-post-card__body'>{body}</p>\n            <div className='single-post-card__button-container__flex-container'>\n              <div className='single-other-buttons__container'>\n                <LikeButton \n                  user={name} \n                  post={{ id, likeCount, likes }} \n                />\n                <CommentButton \n                  post={{ id, commentCount }} \n                /> \n              </div>\n\n              <div className='single-post-card-delete-button__container'>\n                {user && user.name === name && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n \n        <div className='single-post-comments-section add-comment__form'>  \n          <Form>  \n            <h3 className='add-comment__form__title'>Share a Public Comment</h3>\n            \n            <div className='add-comment__flex-container'>\n              <div className='add-comment__form-group'>\n                <label htmlFor=\"comment-content\"> \n                  <textarea\n                    className='new-comment__content'\n                    id='comment-content-input'\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    name=\"comment\"\n                    value={comment}\n                    onChange={(event) => setComment(event.target.value)}\n                    ref={commentInputRef}\n                  />\n                </label>\n              </div>\n\n              <div className='Button--submit add-comment__button'>\n                <button\n                  type=\"submit\"\n                  disabled={comment.trim() === ''}\n                  onClick={submitComment}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </Form>    \n\n          <div className='comments'>\n            <ul className='comments__comment-list'>\n              {comments.map((comment) => (\n                <li key={comment.id} className='comment-in-list__flex-container'>\n                  <div className='comment__thumbnail--round'>\n                    <Link to={`/members/${id}`}>\n                        <div className='comment__thumbnail'>\n                          <img \n                              src={comment.picture}\n                              alt='member headshot'\n                          >\n                          </img>\n                        </div>  \n                    </Link>\n                  </div>\n\n                  <div className=\"comment__content__flex-container\">\n                    \n                    <div className=\"comment__info\">\n                      <h3 className='comment__title'>{comment.name}</h3>\n                      <div className='comment__dates'>\n                        <div className='comment__dates-created_at'>\n                          <span className='Date'>\n                            {moment(comment.createdAt).fromNow()}\n                          </span> \n                        </div>\n                      </div> \n                      <p className='comment__body'>{comment.body}</p>\n                    </div>\n\n                    <div className='comment__button-container__flex-container'>\n                      <div className='comment-card-other-buttons__container'>\n                        {/* TODO -- ADD LIKES AND LIKECOUNT TO COMMENTS / CHANGE post={{ id, likeCount, likes }}  */}\n                        <LikeButton \n                          className=\"comment__like-button\"\n                          user={name} \n                          post={{ id, likeCount, likes }} \n                        />\n                      </div>\n\n                      <div className='comment-card-delete-button__container'>\n                        {user && user.name === comment.name && (\n                          <DeleteButton postId={id} commentId={comment.id} />\n                        )}\n                      </div>\n                    </div>\n\n                  </div>\n                </li>\n              ))}\n              </ul>\n          </div>\n        </div>  \n      </section>\n    )\n  }\n  return postMarkup;\n}\n\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FETCH_USER_QUERY } from '../../graphql.js/queries'\nimport { FETCH_POSTS_QUERY } from '../../graphql.js/queries'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport PostCard from '../../Components/PostCard/PostCard'\nimport './SingleMember.css'\n\n\n\nexport default function SingleMember(props) {\n\n    const userId = props.match.params.memberId;\n\n    const { \n        data: { getPosts: posts }\n    } = useQuery(FETCH_POSTS_QUERY)\n\n    const {\n        data: { getUser }\n    } = useQuery(FETCH_USER_QUERY, {\n        variables: {\n        userId\n        }\n    })\n\n    let userMarkup;\n    if (!getUser) {\n        userMarkup = <p>Loading user..</p>;\n    } else {\n        const {\n            name,\n            email,\n            phone,\n            city,\n            state,\n            about,\n            relation,\n            picture,\n            banner,\n        } = getUser;\n                \n    const getPostsFromMember = (posts) => {\n        const filteredPosts = []\n        posts.map((post) => (\n            post.name  === name ?  filteredPosts.push(post) : ''\n        ))\n        const sortedPosts = (filteredPosts).slice(0,5)\n        return(sortedPosts)\n    }\n\n    const infoTab = (\n        <div className='single-member-card__info'>\n    \n            {relation && (\n            <>\n                <p className='question'>\n                    What is your relation to the group? \n                </p>\n                <p className='answer'>\n                    {relation}\n                </p>\n            </>\n            )}\n\n            {about && (\n            <>\n                <p className='question'>\n                    What are your hobbies, interests, etc?\n                </p>\n                <p className='answer'>\n                    {about}\n                </p>\n            </>\n            )}\n            \n            {state && (\n            <>\n                <p className='question'>\n                    Where do you currently live?\n                </p>\n                <p className='answer'>\n                    {city}, {state}\n                </p>\n            </>\n            )}\n\n            \n            <p className='question'>\n                Contact Info:\n            </p>\n            {phone &&(<p className='answer'>\n                <FontAwesomeIcon icon={['fa', 'phone']} /> \n                {formatPhoneNumber(phone)}\n            </p>)}\n            {email && (<p className='answer'>\n                <FontAwesomeIcon icon={['fa', 'envelope']} /> \n                {email}\n            </p>)}\n\n        </div>\n    );\n\n\n    const postsTab = (\n        <div className='member__activity__section'>\n            <ul className='filtered-post-list'>\n                {getPostsFromMember(posts).map(post =>\n                <li key={post.id} className='filtered-post-in-list__flex-container'>\n                    <div className='Item__in__activity__list__FlexItem__Info'>\n                        <PostCard post={post} />\n                    </div>\n                </li>\n                )}\n            </ul>\n        </div>\n    )\n\n    const displayTabs = (\n        <Tabs defaultIndex={0} onSelect={index => (index)}>\n            <TabList>\n                <Tab>Info</Tab>\n                <Tab>Recent Posts</Tab>\n            </TabList>\n            <TabPanel>{infoTab}</TabPanel>\n            <TabPanel>{postsTab}</TabPanel>\n        </Tabs>\n    )\n\n    function formatPhoneNumber(phoneNumberString) {\n        var cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n        var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n        if (match) {\n          return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n        }\n        return null\n      }\n\n    function goBack() {\n        props.history.replace('/members')\n      }\n\n    userMarkup = (\n      <section className='single-member-main'>\n        <h2 className='single-member__title'>{name}</h2>\n\n        <button \n            className = \"Button--back\"\n            onClick = {goBack}\n        >\n            Back\n        </button>\n\n        <div className='single-member-card__profile-pix'>\n            {banner && (<div className='single-member-card__banner'>\n                <img \n                    src={banner}\n                    alt='member headshot'\n                >\n                </img>    \n            </div>)}\n            {picture && (<div className='single-member-card__thumbnail--round'>\n                <img \n                    src={picture}\n                    alt='member headshot'\n                >\n                </img>    \n            </div>)}\n        </div>\n\n        <div className='single-member-card__flex-container'>\n\n            <h2 className='single-member-card__name'>\n                {name}\n            </h2>\n\n            {displayTabs}\n\n        </div>\n        \n      </section>\n    )\n  }\n  return userMarkup;\n}\n\n\n\n\n\n","import React, { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { useMutation } from '@apollo/react-hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { GraphQLClient } from 'graphql-request'\n\nimport {AuthContext} from '../../context/auth'\nimport { useForm } from '../../util/hooks'\nimport { CREATE_PHOTO_MUTATION } from '../../graphql.js/mutations'\nimport { UPDATE_USER } from '../../graphql.js/mutations'\nimport Form from '../../util/Form'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\n\nimport './UpdateProfile.css'\n\n\n\nexport default function UpdateProfile(props) {\n  const [errors, setErrors] = useState({})\n  const [picture, setPicture] = useState('')\n\n  const { dispatch, user } = useContext(AuthContext)\n\n  const currentData = user\n  const newPicture = currentData.newPicture\n\n\n  let { onChange, onSubmit, values } = useForm(updateUserCallback, {\n    email: currentData.email,\n    about: '',\n    relation: '',\n    city: '',\n    state: '',\n    phone: '',\n    picture: newPicture || currentData.picture,\n    banner: currentData.banner\n  });\n\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\n    update(\n      _,\n      {\n        data: { update: userData }\n      }\n    ) {\n      props.history.push(`/members/${currentData.id}`)\n      // console.log('values: ', values)\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  const handleImageUpload = async () => {\n    const data = new FormData()\n    data.append('file', picture)\n    data.append('upload_preset', 'geopins')\n    data.append('cloud_name', 'amy-braswell')\n\n    const res = await axios.post(\n      'https://api.cloudinary.com/v1_1/amy-braswell/image/upload',\n      data\n    )\n    return res.data.url\n  }\n\n  const handleImageSubmit = async e => {\n    try {\n      e.preventDefault()\n      // upload image to Cloudinary and retrieve its URL\n      // grab the successfully logged-in user's Google idToken\n      const idToken = localStorage.getItem('jwtToken')\n      // create a GraphQL Client object, pass it the token as an auth header\n      const client = new GraphQLClient('http://localhost:4000/graphql', {\n        headers: {\n          authorization: idToken,\n        }, \n      })\n      const imageUrl = await handleImageUpload()\n      // create GraphQL variables object\n      const variables = {\n        picture: imageUrl,\n      }\n      // send mutation to create new Photo, grab response\n      let picture = await client.request(CREATE_PHOTO_MUTATION, variables)\n      // add new Photo to 'photo' in state\n      user.picture = await picture\n      let newPicture = user.picture.createPhoto.picture\n      dispatch({ type: 'CREATE_PHOTO', payload: newPicture })\n      // console.log('newPicture = user.picture.createPhoto.picture: ', newPicture)\n    } catch (err) {\n      console.error('Error creating Photo', err)\n    }\n  }\n\n  function updateUserCallback() {\n    updateUser()\n  }\n\n  function goBack() {\n    props.history.replace('/')\n  }\n\n  const infoTab = (\n    <div className='single-member-card__info'>\n            {Object.keys(errors).length > 0 && (\n              <div className=\"Error Message error\">\n                <ul className=\"Error__list\">\n                  {Object.values(errors).map((value) => (\n                    <li key={value}>{value}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            <Form onSubmit={handleImageSubmit} className={loading ? 'Loading register--loading' : ''}>\n          \n              <input\n                className='input--update-picture select-file'\n                name=\"picture\"\n                accept=\"image/*\"\n                id=\"image\"\n                type=\"file\"\n                onChange={e => setPicture(e.target.files[0])}\n              />\n\n              <div className=\"overlay-layer\">\n                Click here to select profile photo\n                </div>\n\n              <div className='Button--submit update__buttons button--upload'>\n                <button \n                  className='update--button'\n                  type='submit'>\n                  Upload\n                </button>\n              </div>\n            </Form>\n\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'Loading register--loading' : ''}>\n          \n              <p className='update-question'>\n                    How do you know the patient? \n              </p>\n\n              <label htmlFor=\"Relation\"/>\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                  placeholder= {currentData.relation}\n                name=\"relation\"\n                type=\"text\"\n                value={values.relation}\n                error={errors.relation ? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <p className='update-question'>\n                  What are your hobbies, interests, etc?\n              </p>\n              \n              <label htmlFor=\"About\" />\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                placeholder={currentData.about}\n                name=\"about\"\n                type=\"text\"\n                value={values.about}\n                error={errors.about ? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <p className='update-question'>\n                  Where do you currently live?\n              </p>\n                  \n              <div className=\"update-answer-half__flex-container\">\n                \n                <div className=\"update-answer-half\">\n                  <label htmlFor=\"City\"/>\n                  <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n                  <input\n                    className='update-answer'\n                    placeholder={currentData.city}\n                    name=\"city\"\n                    type=\"text\"\n                    value={values.city}\n                    error={errors.city? 'true': 'false'}\n                    onChange={onChange}\n                  />\n\n                </div>\n                \n                <div className=\"update-answer-half\">\n                  <label htmlFor=\"State\" />\n                  <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n                  <input\n                    className='update-answer'\n                    placeholder={currentData.state}\n                    name=\"state\"\n                    type=\"text\"\n                    value={values.state}\n                    error={errors.state? 'true' : 'false'}\n                    onChange={onChange}\n                  />\n                </div>\n              </div>\n\n              <p className='update-question'>\n                  Contact Info:\n              </p>\n\n              <label htmlFor=\"Phone\" />\n              <span className='update-pencil'><FontAwesomeIcon icon={['fa', 'pencil-alt']} /></span>\n              <input\n                className='update-answer'\n                placeholder={currentData.phone}\n                name=\"phone\"\n                type=\"text\"\n                value={values.phone}\n                error={errors.phone? 'true' : 'false'}\n                onChange={onChange}\n              />\n\n              <div className='Button--submit update__buttons'>\n                <button \n                  className='update--button'\n                  type='submit'>\n                  Update\n                </button>\n              </div>\n\n              <div className='Button--submit update__buttons'>\n                <button \n                  className='update--button'\n                  type='cancel'\n                  onClick={goBack}\n                >\n                  Cancel\n                </button>\n                \n              </div>\n            </Form>\n\n    </div>\n  );\n\n  const displayTabs = (\n    <Tabs\n      defaultIndex={0} \n    >\n        <TabList>\n            <Tab>Update Info</Tab>\n        </TabList>\n        <TabPanel>{infoTab}</TabPanel>\n    </Tabs>\n  )\n\nreturn(\n  <section className='update-member-main'>\n    <h2 className='update-member__title'>Update Your Profile</h2>\n      \n      <div className='update-member-card__profile-pix'>\n        <div className='update-member-card__banner'>\n            <img \n                src={currentData.banner}\n                alt='member cover'\n            >\n            </img>    \n        </div>\n        <div className='update-member-card__thumbnail--round'>\n            <img \n                src={currentData.newPicture || currentData.picture}\n                alt='member headshot'\n            >\n            </img>    \n        </div>\n      </div>\n\n    <div className='update-member-card__flex-container'>\n\n        <h2 className='update-member-card__name'>\n          {currentData.name}\n        </h2>\n\n        {displayTabs}\n\n    </div>\n    \n      </section>\n    )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { faAddressCard, faBars, faCamera, faComment, faEdit, faEnvelope, faPencilAlt, faPhone, faThumbsUp, faTimes, faTrashAlt, faUsers } \n  from '@fortawesome/free-solid-svg-icons'\n\nimport { AuthProvider } from './context/auth'\nimport ProtectedRoute from './util/ProtectedRoute'\nimport Header from './Components/Header/Header'\nimport NavBar from './Components/NavBar/NavBar'\nimport Home from './Pages/Home/Home'\nimport Login from './Pages/Login/Login'\nimport Members from './Pages/Members/Members'\nimport Register from './Pages/Register/Register'\nimport SinglePost from './Pages/SinglePost/SinglePost'\nimport SingleMember from './Pages/SingleMember/SingleMember'\nimport UpdateProfile from './Pages/UpdateProfile/UpdateProfile'\n\nimport './App.css'\nimport 'semantic-ui-css/semantic.css';\n\n\nlibrary.add(\n  faAddressCard, \n  faBars, \n  faCamera,\n  faComment,  \n  faEdit,\n  faEnvelope, \n  faPencilAlt,\n  faPhone,\n  faThumbsUp, \n  faTimes,  \n  faTrashAlt, \n  faUsers, \n)\n\n\nfunction App() {\n\n\n  return ( \n    <div>\n    <AuthProvider>\n      <Router>\n        <div className='App'>\n          <div className='App__sidebar'>\n          <NavBar/>\n          </div>\n          <div className='navigation'>\n            <Header />\n          </div>\n          <main className='App__main'>\n            <ProtectedRoute exact path=\"/\" component={Home} />\n            <ProtectedRoute exact path=\"/posts\" component={Home} />\n            <ProtectedRoute exact path=\"/posts/:postId\" component={SinglePost} />\n            <ProtectedRoute exact path=\"/members\" component={Members} />\n            <ProtectedRoute exact path=\"/members/:memberId\" component={SingleMember} />\n            <ProtectedRoute exact path=\"/update\" component={UpdateProfile} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </main>\n        </div>\n      </Router>\n    </AuthProvider>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from 'apollo-link-context';\n\n\nconst httpLink = createHttpLink({\n  uri: 'https://connectivity-braswell.herokuapp.com/'\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);","import ReactDOM from 'react-dom'\nimport ApolloProvider from './ApolloProvider'\nimport './index.css'\n\nReactDOM.render(ApolloProvider, document.getElementById('root'))"],"sourceRoot":""}